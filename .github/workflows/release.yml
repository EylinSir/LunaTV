name: Release by VERSION.txt

on:
  workflow_dispatch:   # 手动触发
  push:
    branches:
      - main           # 当 main 分支更新时自动触发

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read version from VERSION.txt
        id: version
        run: |
          VERSION=$(cat VERSION.txt | tr -d ' \n')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        run: |
          if git rev-parse ${{ env.VERSION }} >/dev/null 2>&1; then
            echo "Tag ${{ env.VERSION }} already exists. Skip."
            exit 0
          fi

      - name: Create new tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}

      - name: Extract changelog or commit
        id: changelog
        run: |
          # 自动选择 changelog 文件
          if [ -f "CHANGELOG.md" ]; then
            CHANGELOG_FILE="CHANGELOG.md"
          elif [ -f "CHANGELOG" ]; then
            CHANGELOG_FILE="CHANGELOG"
          else
            CHANGELOG_FILE=""
          fi

          CONTENT=""
          if [ -n "$CHANGELOG_FILE" ]; then
            CONTENT=$(awk '/^## \[?'"${{ env.VERSION }}"'\]?/ {flag=1;next} /^## / {flag=0} flag {print}' $CHANGELOG_FILE)
          fi

          if [ -z "$CONTENT" ]; then
            echo "未找到 CHANGELOG 对应版本，尝试使用最近一次提交日志"
            CONTENT=$(git log -1 --pretty=format:"%s")
          fi

          if [ -z "$CONTENT" ]; then
            echo "既无 CHANGELOG 也无提交日志，使用默认说明"
            CONTENT="版本号来自 VERSION.txt"
          fi

          echo "提取到的内容："
          echo "$CONTENT"

          echo "CONTENT<<EOF" >> $GITHUB_ENV
          echo "$CONTENT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          body: ${{ env.CONTENT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
