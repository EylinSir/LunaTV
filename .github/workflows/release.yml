name: Release by VERSION.txt & CHANGELOG

on:
  push:
    paths:
      - "VERSION.txt"   # Âè™Êúâ VERSION.txt ÂèòÂåñÊó∂Ëß¶Âèë
  workflow_dispatch:     # ‰πüÂèØ‰ª•ÊâãÂä®Ëß¶Âèë

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read version from VERSION.txt
        id: version
        run: |
          VERSION=$(cat VERSION.txt | tr -d ' \n')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        run: |
          if git rev-parse ${{ env.VERSION }} >/dev/null 2>&1; then
            echo "‚ö†Ô∏è Tag ${{ env.VERSION }} already exists. Skip."
            exit 0
          fi

      - name: Extract changelog for this version
        id: changelog
        run: |
          VERSION=${{ env.VERSION }}
          if [ ! -f CHANGELOG ]; then
            echo "‚ùå CHANGELOG file not found!"
            exit 1
          fi
          NOTES=$(awk "/^## $VERSION/{flag=1;next}/^## /{flag=0}flag" CHANGELOG | sed '/^$/d')
          if [ -z "$NOTES" ]; then
            echo "‚ùå No changelog entry found for $VERSION"
            exit 1
          fi
          echo "NOTES<<EOF" >> $GITHUB_ENV
          echo "$NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Generate commit log since last tag
        id: commits
        run: |
          VERSION=${{ env.VERSION }}
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)")
          else
            COMMITS=$(git log $LAST_TAG..HEAD --pretty=format:"- %s (%h)")
          fi
          if [ -z "$COMMITS" ]; then
            COMMITS="(Êó†Êñ∞ÁöÑÊèê‰∫§ËÆ∞ÂΩï)"
          fi
          echo "COMMITS<<EOF" >> $GITHUB_ENV
          echo "$COMMITS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create new tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: "üéâ ÁâàÊú¨ ${{ env.VERSION }} Êõ¥Êñ∞"
          body: |
            ## Êõ¥Êñ∞ÂÜÖÂÆπ
            ${{ env.NOTES }}

            ## Êèê‰∫§ËÆ∞ÂΩï
            ${{ env.COMMITS }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
